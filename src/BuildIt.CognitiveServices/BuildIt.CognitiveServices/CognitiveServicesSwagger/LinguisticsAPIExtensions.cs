// Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace BuildIt.CognitiveServices
{
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for LinguisticsAPI.
    /// </summary>
    public static partial class LinguisticsAPIExtensions
    {
            /// <summary>
            /// This API returns a list of strings representing which analyzers are
            /// currently registered.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='subscriptionKey'>
            /// subscription key in url
            /// </param>
            /// <param name='ocpApimSubscriptionKey'>
            /// subscription key in header
            /// </param>
            public static void Listanalyzers(this ILinguisticsAPI operations, string subscriptionKey = default(string), string ocpApimSubscriptionKey = default(string))
            {
                System.Threading.Tasks.Task.Factory.StartNew(s => ((ILinguisticsAPI)s).ListanalyzersAsync(subscriptionKey, ocpApimSubscriptionKey), operations, System.Threading.CancellationToken.None, System.Threading.Tasks.TaskCreationOptions.None,  System.Threading.Tasks.TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
            }

            /// <summary>
            /// This API returns a list of strings representing which analyzers are
            /// currently registered.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='subscriptionKey'>
            /// subscription key in url
            /// </param>
            /// <param name='ocpApimSubscriptionKey'>
            /// subscription key in header
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async System.Threading.Tasks.Task ListanalyzersAsync(this ILinguisticsAPI operations, string subscriptionKey = default(string), string ocpApimSubscriptionKey = default(string), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
            {
                await operations.ListanalyzersWithHttpMessagesAsync(subscriptionKey, ocpApimSubscriptionKey, null, cancellationToken).ConfigureAwait(false);
            }

            /// <summary>
            /// Analyze text with specific analyzers.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='subscriptionKey'>
            /// subscription key in url
            /// </param>
            /// <param name='ocpApimSubscriptionKey'>
            /// subscription key in header
            /// </param>
            public static void Analyzetext(this ILinguisticsAPI operations, string subscriptionKey = default(string), string ocpApimSubscriptionKey = default(string))
            {
                System.Threading.Tasks.Task.Factory.StartNew(s => ((ILinguisticsAPI)s).AnalyzetextAsync(subscriptionKey, ocpApimSubscriptionKey), operations, System.Threading.CancellationToken.None, System.Threading.Tasks.TaskCreationOptions.None,  System.Threading.Tasks.TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
            }

            /// <summary>
            /// Analyze text with specific analyzers.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='subscriptionKey'>
            /// subscription key in url
            /// </param>
            /// <param name='ocpApimSubscriptionKey'>
            /// subscription key in header
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async System.Threading.Tasks.Task AnalyzetextAsync(this ILinguisticsAPI operations, string subscriptionKey = default(string), string ocpApimSubscriptionKey = default(string), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
            {
                await operations.AnalyzetextWithHttpMessagesAsync(subscriptionKey, ocpApimSubscriptionKey, null, cancellationToken).ConfigureAwait(false);
            }

    }
}
