// Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace BuildIt.CognitiveServices.Models
{
    using System.Linq;

    /// <summary>
    /// Information describing a usage event
    /// </summary>
    public partial class UsageEventInfo
    {
        /// <summary>
        /// Initializes a new instance of the UsageEventInfo class.
        /// </summary>
        public UsageEventInfo() { }

        /// <summary>
        /// Initializes a new instance of the UsageEventInfo class.
        /// </summary>
        /// <param name="eventType">The type of the event. Possible values
        /// include: 'Click', 'RecommendationClick', 'AddShopCart',
        /// 'RemoveShopCart', 'Purchase'</param>
        /// <param name="itemId">The id of the item in context</param>
        /// <param name="timestamp">The time of the event</param>
        /// <param name="count">The number of items</param>
        /// <param name="unitPrice">The price of the item in context</param>
        public UsageEventInfo(string eventType = default(string), string itemId = default(string), string timestamp = default(string), int? count = default(int?), double? unitPrice = default(double?))
        {
            EventType = eventType;
            ItemId = itemId;
            Timestamp = timestamp;
            Count = count;
            UnitPrice = unitPrice;
        }

        /// <summary>
        /// Gets or sets the type of the event. Possible values include:
        /// 'Click', 'RecommendationClick', 'AddShopCart', 'RemoveShopCart',
        /// 'Purchase'
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "eventType")]
        public string EventType { get; set; }

        /// <summary>
        /// Gets or sets the id of the item in context
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "itemId")]
        public string ItemId { get; set; }

        /// <summary>
        /// Gets or sets the time of the event
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "timestamp")]
        public string Timestamp { get; set; }

        /// <summary>
        /// Gets or sets the number of items
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "count")]
        public int? Count { get; set; }

        /// <summary>
        /// Gets or sets the price of the item in context
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "unitPrice")]
        public double? UnitPrice { get; set; }

    }
}
