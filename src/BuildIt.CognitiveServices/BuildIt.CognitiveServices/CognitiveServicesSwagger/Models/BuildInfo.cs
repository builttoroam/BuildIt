// Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace BuildIt.CognitiveServices.Models
{
    using System.Linq;

    public partial class BuildInfo
    {
        /// <summary>
        /// Initializes a new instance of the BuildInfo class.
        /// </summary>
        public BuildInfo() { }

        /// <summary>
        /// Initializes a new instance of the BuildInfo class.
        /// </summary>
        /// <param name="id">Unique build identifier</param>
        /// <param name="description">Description provided by user
        /// (BuildRequestInfo.Description)</param>
        /// <param name="type">Type of build: Recommendation - 1, Ranking - 2,
        /// Fbt - 3</param>
        /// <param name="modelName">Name of the Model associated this
        /// build</param>
        /// <param name="modelId">ID of the Model associated this build</param>
        /// <param name="status">Status of the build: NotStarted, Running,
        /// Cancelling, Cancelled, Succeeded, Failed</param>
        /// <param name="statusMessage">Details if available about build
        /// status</param>
        /// <param name="startDateTime">Build start time</param>
        /// <param name="endDateTime">Build end time</param>
        /// <param name="modifiedDateTime">Last build modified time</param>
        /// <param name="buildParameters">Parameters for build</param>
        public BuildInfo(long? id = default(long?), string description = default(string), string type = default(string), string modelName = default(string), string modelId = default(string), string status = default(string), string statusMessage = default(string), string startDateTime = default(string), string endDateTime = default(string), string modifiedDateTime = default(string), BuildParameters buildParameters = default(BuildParameters))
        {
            Id = id;
            Description = description;
            Type = type;
            ModelName = modelName;
            ModelId = modelId;
            Status = status;
            StatusMessage = statusMessage;
            StartDateTime = startDateTime;
            EndDateTime = endDateTime;
            ModifiedDateTime = modifiedDateTime;
            BuildParameters = buildParameters;
        }

        /// <summary>
        /// Gets or sets unique build identifier
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "id")]
        public long? Id { get; set; }

        /// <summary>
        /// Gets or sets description provided by user
        /// (BuildRequestInfo.Description)
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "description")]
        public string Description { get; set; }

        /// <summary>
        /// Gets or sets type of build: Recommendation - 1, Ranking - 2, Fbt -
        /// 3
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "type")]
        public string Type { get; set; }

        /// <summary>
        /// Gets or sets name of the Model associated this build
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "modelName")]
        public string ModelName { get; set; }

        /// <summary>
        /// Gets or sets ID of the Model associated this build
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "modelId")]
        public string ModelId { get; set; }

        /// <summary>
        /// Gets or sets status of the build: NotStarted, Running, Cancelling,
        /// Cancelled, Succeeded, Failed
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "status")]
        public string Status { get; set; }

        /// <summary>
        /// Gets or sets details if available about build status
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "statusMessage")]
        public string StatusMessage { get; set; }

        /// <summary>
        /// Gets or sets build start time
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "startDateTime")]
        public string StartDateTime { get; set; }

        /// <summary>
        /// Gets or sets build end time
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "endDateTime")]
        public string EndDateTime { get; set; }

        /// <summary>
        /// Gets or sets last build modified time
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "modifiedDateTime")]
        public string ModifiedDateTime { get; set; }

        /// <summary>
        /// Gets or sets parameters for build
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "buildParameters")]
        public BuildParameters BuildParameters { get; set; }

    }
}
