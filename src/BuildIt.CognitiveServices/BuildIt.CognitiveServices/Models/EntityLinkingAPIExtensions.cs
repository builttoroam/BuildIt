// Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace BuildIt.CognitiveServices
{
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for EntityLinkingAPI.
    /// </summary>
    public static partial class EntityLinkingAPIExtensions
    {
            /// <summary>
            /// Entity Linking is a natural language processing tool to help analyzing
            /// text for your application. Entity Linking recognize a named-entity from
            /// given text and  aligning a textual mention of the entity to an
            /// appropriate entry in a knowledge base.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='selection'>
            /// The specific word or phrase within the text that is to be entity linked.
            /// If not specified, the service will try to recognize and identify all the
            /// entities within the input text.
            /// </param>
            /// <param name='offset'>
            /// The location (in offset by characters) of the selected word or phrase
            /// within the input text. Used to distinguish when there are multiple
            /// instances of the same words or phrases within the input text. Only valid
            /// when the selection is specified.
            /// </param>
            /// <param name='subscriptionKey'>
            /// subscription key in url
            /// </param>
            /// <param name='ocpApimSubscriptionKey'>
            /// subscription key in header
            /// </param>
            public static void LinkEntity(this IEntityLinkingAPI operations, string selection = default(string), string offset = default(string), string subscriptionKey = default(string), string ocpApimSubscriptionKey = default(string))
            {
                System.Threading.Tasks.Task.Factory.StartNew(s => ((IEntityLinkingAPI)s).LinkEntityAsync(selection, offset, subscriptionKey, ocpApimSubscriptionKey), operations, System.Threading.CancellationToken.None, System.Threading.Tasks.TaskCreationOptions.None,  System.Threading.Tasks.TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
            }

            /// <summary>
            /// Entity Linking is a natural language processing tool to help analyzing
            /// text for your application. Entity Linking recognize a named-entity from
            /// given text and  aligning a textual mention of the entity to an
            /// appropriate entry in a knowledge base.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='selection'>
            /// The specific word or phrase within the text that is to be entity linked.
            /// If not specified, the service will try to recognize and identify all the
            /// entities within the input text.
            /// </param>
            /// <param name='offset'>
            /// The location (in offset by characters) of the selected word or phrase
            /// within the input text. Used to distinguish when there are multiple
            /// instances of the same words or phrases within the input text. Only valid
            /// when the selection is specified.
            /// </param>
            /// <param name='subscriptionKey'>
            /// subscription key in url
            /// </param>
            /// <param name='ocpApimSubscriptionKey'>
            /// subscription key in header
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async System.Threading.Tasks.Task LinkEntityAsync(this IEntityLinkingAPI operations, string selection = default(string), string offset = default(string), string subscriptionKey = default(string), string ocpApimSubscriptionKey = default(string), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
            {
                await operations.LinkEntityWithHttpMessagesAsync(selection, offset, subscriptionKey, ocpApimSubscriptionKey, null, cancellationToken).ConfigureAwait(false);
            }

    }
}
