// Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace BuildIt.CognitiveServices
{
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for NewsSearchAPIV5.
    /// </summary>
    public static partial class NewsSearchAPIV5Extensions
    {
            /// <summary>
            /// Get news articles relevant for a given query.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='count'>
            /// The number of news results to return in the response. The actual number
            /// delivered may be less than requested. Possible values include: '10'
            /// </param>
            /// <param name='offset'>
            /// The zero-based offset that indicates the number of news results to skip
            /// before returning results. Possible values include: '0'
            /// </param>
            /// <param name='mkt'>
            /// The market where the results come from. Typically, this is the country
            /// where the user is making the request from; however, it could be a
            /// different country if the user is not located in a country where Bing
            /// delivers results. The market must be in the form {language code}-{country
            /// code}. For example, en-US.
            /// 
            /// &lt;br&gt;
            /// &lt;br&gt;
            /// Full list of supported markets:
            /// &lt;br&gt;
            /// es-AR,en-AU,de-AT,nl-BE,fr-BE,pt-BR,en-CA,fr-CA,es-CL,da-DK,fi-FI,fr-FR,de-DE,zh-HK,en-IN,en-ID,en-IE,it-IT,ja-JP,ko-KR,en-MY,es-MX,nl-NL,en-NZ,no-NO,zh-CN,pl-PL,pt-PT,en-PH,ru-RU,ar-SA,en-ZA,es-ES,sv-SE,fr-CH,de-CH,zh-TW,tr-TR,en-GB,en-US,es-US.
            /// Possible values include: 'en-us'
            /// </param>
            /// <param name='safeSearch'>
            /// A filter used to filter results for adult content. Possible values
            /// include: 'Off', 'Moderate', 'Strict'
            /// </param>
            /// <param name='subscriptionKey'>
            /// subscription key in url
            /// </param>
            /// <param name='ocpApimSubscriptionKey'>
            /// subscription key in header
            /// </param>
            public static void Search(this INewsSearchAPIV5 operations, string count = "10", string offset = "0", string mkt = "en-us", string safeSearch = "Moderate", string subscriptionKey = default(string), string ocpApimSubscriptionKey = default(string))
            {
                System.Threading.Tasks.Task.Factory.StartNew(s => ((INewsSearchAPIV5)s).SearchAsync(count, offset, mkt, safeSearch, subscriptionKey, ocpApimSubscriptionKey), operations, System.Threading.CancellationToken.None, System.Threading.Tasks.TaskCreationOptions.None,  System.Threading.Tasks.TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
            }

            /// <summary>
            /// Get news articles relevant for a given query.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='count'>
            /// The number of news results to return in the response. The actual number
            /// delivered may be less than requested. Possible values include: '10'
            /// </param>
            /// <param name='offset'>
            /// The zero-based offset that indicates the number of news results to skip
            /// before returning results. Possible values include: '0'
            /// </param>
            /// <param name='mkt'>
            /// The market where the results come from. Typically, this is the country
            /// where the user is making the request from; however, it could be a
            /// different country if the user is not located in a country where Bing
            /// delivers results. The market must be in the form {language code}-{country
            /// code}. For example, en-US.
            /// 
            /// &lt;br&gt;
            /// &lt;br&gt;
            /// Full list of supported markets:
            /// &lt;br&gt;
            /// es-AR,en-AU,de-AT,nl-BE,fr-BE,pt-BR,en-CA,fr-CA,es-CL,da-DK,fi-FI,fr-FR,de-DE,zh-HK,en-IN,en-ID,en-IE,it-IT,ja-JP,ko-KR,en-MY,es-MX,nl-NL,en-NZ,no-NO,zh-CN,pl-PL,pt-PT,en-PH,ru-RU,ar-SA,en-ZA,es-ES,sv-SE,fr-CH,de-CH,zh-TW,tr-TR,en-GB,en-US,es-US.
            /// Possible values include: 'en-us'
            /// </param>
            /// <param name='safeSearch'>
            /// A filter used to filter results for adult content. Possible values
            /// include: 'Off', 'Moderate', 'Strict'
            /// </param>
            /// <param name='subscriptionKey'>
            /// subscription key in url
            /// </param>
            /// <param name='ocpApimSubscriptionKey'>
            /// subscription key in header
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async System.Threading.Tasks.Task SearchAsync(this INewsSearchAPIV5 operations, string count = "10", string offset = "0", string mkt = "en-us", string safeSearch = "Moderate", string subscriptionKey = default(string), string ocpApimSubscriptionKey = default(string), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
            {
                await operations.SearchWithHttpMessagesAsync(count, offset, mkt, safeSearch, subscriptionKey, ocpApimSubscriptionKey, null, cancellationToken).ConfigureAwait(false);
            }

            /// <summary>
            /// Get trending topics identified by Bing.  These are the same topics shown
            /// in the banner at the bottom of the Bing home page.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='subscriptionKey'>
            /// subscription key in url
            /// </param>
            /// <param name='ocpApimSubscriptionKey'>
            /// subscription key in header
            /// </param>
            public static void TrendingTopics(this INewsSearchAPIV5 operations, string subscriptionKey = default(string), string ocpApimSubscriptionKey = default(string))
            {
                System.Threading.Tasks.Task.Factory.StartNew(s => ((INewsSearchAPIV5)s).TrendingTopicsAsync(subscriptionKey, ocpApimSubscriptionKey), operations, System.Threading.CancellationToken.None, System.Threading.Tasks.TaskCreationOptions.None,  System.Threading.Tasks.TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
            }

            /// <summary>
            /// Get trending topics identified by Bing.  These are the same topics shown
            /// in the banner at the bottom of the Bing home page.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='subscriptionKey'>
            /// subscription key in url
            /// </param>
            /// <param name='ocpApimSubscriptionKey'>
            /// subscription key in header
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async System.Threading.Tasks.Task TrendingTopicsAsync(this INewsSearchAPIV5 operations, string subscriptionKey = default(string), string ocpApimSubscriptionKey = default(string), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
            {
                await operations.TrendingTopicsWithHttpMessagesAsync(subscriptionKey, ocpApimSubscriptionKey, null, cancellationToken).ConfigureAwait(false);
            }

            /// <summary>
            /// Returns news for a provided category.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='category'>
            /// Specifies which category of news articles the caller wants returned.
            /// Possible values include: 'Business', 'Entertainment', 'Health',
            /// 'Politics', 'ScienceAndTechnology', 'Sports', 'US/UK', 'World'
            /// </param>
            /// <param name='subscriptionKey'>
            /// subscription key in url
            /// </param>
            /// <param name='ocpApimSubscriptionKey'>
            /// subscription key in header
            /// </param>
            public static void CategoryNews(this INewsSearchAPIV5 operations, string category = default(string), string subscriptionKey = default(string), string ocpApimSubscriptionKey = default(string))
            {
                System.Threading.Tasks.Task.Factory.StartNew(s => ((INewsSearchAPIV5)s).CategoryNewsAsync(category, subscriptionKey, ocpApimSubscriptionKey), operations, System.Threading.CancellationToken.None, System.Threading.Tasks.TaskCreationOptions.None,  System.Threading.Tasks.TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
            }

            /// <summary>
            /// Returns news for a provided category.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='category'>
            /// Specifies which category of news articles the caller wants returned.
            /// Possible values include: 'Business', 'Entertainment', 'Health',
            /// 'Politics', 'ScienceAndTechnology', 'Sports', 'US/UK', 'World'
            /// </param>
            /// <param name='subscriptionKey'>
            /// subscription key in url
            /// </param>
            /// <param name='ocpApimSubscriptionKey'>
            /// subscription key in header
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async System.Threading.Tasks.Task CategoryNewsAsync(this INewsSearchAPIV5 operations, string category = default(string), string subscriptionKey = default(string), string ocpApimSubscriptionKey = default(string), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
            {
                await operations.CategoryNewsWithHttpMessagesAsync(category, subscriptionKey, ocpApimSubscriptionKey, null, cancellationToken).ConfigureAwait(false);
            }

    }
}
