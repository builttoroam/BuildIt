// Code generated by Microsoft (R) AutoRest Code Generator 0.9.7.0
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

using Newtonsoft.Json.Linq;

namespace BuildIt.Bot.Client.DirectLinkApi.Models
{
    public partial class Attachment
    {
        /// <summary>
        /// Optional. Content type for this attachment
        /// </summary>
        public string ContentType { get; set; }

        /// <summary>
        /// Optional. URL for this attachment
        /// </summary>
        public string Url { get; set; }

        /// <summary>
        /// Initializes a new instance of the Attachment class.
        /// </summary>
        public Attachment()
        {
        }
        
        /// <summary>
        /// Deserialize the object
        /// </summary>
        public virtual void DeserializeJson(JToken inputObject)
        {
            if (inputObject != null && inputObject.Type != JTokenType.Null)
            {
                JToken contentTypeValue = inputObject["contentType"];
                if (contentTypeValue != null && contentTypeValue.Type != JTokenType.Null)
                {
                    this.ContentType = ((string)contentTypeValue);
                }
                JToken urlValue = inputObject["url"];
                if (urlValue != null && urlValue.Type != JTokenType.Null)
                {
                    this.Url = ((string)urlValue);
                }
            }
        }
        
        /// <summary>
        /// Serialize the object
        /// </summary>
        /// <returns>
        /// Returns the json model for the type Attachment
        /// </returns>
        public virtual JToken SerializeJson(JToken outputObject)
        {
            if (outputObject == null)
            {
                outputObject = new JObject();
            }
            if (this.ContentType != null)
            {
                outputObject["contentType"] = this.ContentType;
            }
            if (this.Url != null)
            {
                outputObject["url"] = this.Url;
            }
            return outputObject;
        }
    }
}
